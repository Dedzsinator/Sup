apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: sup
data:
  MIX_ENV: "prod"
  GUARDIAN_SECRET_KEY: "change-this-in-production-to-a-secure-random-string"
  SCYLLA_KEYSPACE: "sup"
  # Add other non-sensitive configuration here
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: sup
type: Opaque
data:
  database_url: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzQHBvc3RncmVzOjU0MzIvc3VwX3Byb2Q= # postgresql://postgres:postgres@postgres:5432/sup_prod
  redis_url: cmVkaXM6Ly9yZWRpczozNjM3OQ== # redis://redis:6379
  scylla_nodes: c2N5bGxhZGI6OTA0Mg== # scylladb:9042
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: sup
  labels:
    app: backend
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        component: api
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:15
          command:
            - sh
            - -c
            - |
              until pg_isready -h postgres -p 5432 -U postgres; do
                echo "Waiting for postgres..."
                sleep 2
              done
        - name: wait-for-redis
          image: redis:7-alpine
          command:
            - sh
            - -c
            - |
              until redis-cli -h redis -p 6379 ping; do
                echo "Waiting for redis..."
                sleep 2
              done
        - name: wait-for-scylla
          image: scylladb/scylla:5.2
          command:
            - sh
            - -c
            - |
              until cqlsh scylladb -e "DESCRIBE KEYSPACES"; do
                echo "Waiting for scylla..."
                sleep 5
              done
      containers:
        - name: backend
          image: sup/backend:latest
          ports:
            - containerPort: 4000
              name: http
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: database_url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: redis_url
            - name: SCYLLA_NODES
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: scylla_nodes
          envFrom:
            - configMapRef:
                name: backend-config
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: sup
  labels:
    app: backend
    component: api
spec:
  ports:
    - port: 4000
      targetPort: 4000
      name: http
  selector:
    app: backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: sup
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/websocket-services: "backend"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  rules:
    - host: api.sup.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 4000
