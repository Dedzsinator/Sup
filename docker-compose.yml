version: '3.8'

services:
  # Database services
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: sup_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  scylladb:
    image: scylladb/scylla:5.2
    ports:
      - "9042:9042"
      - "19042:19042"  # JMX
    volumes:
      - scylla_data:/var/lib/scylla
    command: --smp 1 --memory 1G --overprovisioned 1

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/sup_dev
      REDIS_URL: redis://redis:6379
      SCYLLA_NODES: scylladb:9042
      SCYLLA_KEYSPACE: sup
      GUARDIAN_SECRET_KEY: development-secret-key-change-in-production
      MIX_ENV: dev
    depends_on:
      - postgres
      - redis
      - scylladb
    volumes:
      - ./backend:/app
    command: mix run --no-halt

  # Frontend service (for web)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "19006:19006"  # Expo web
      - "3000:3000"    # Alternative web port
    environment:
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

  # Autocomplete service
  autocomplete:
    build:
      context: ./autocomplete
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./autocomplete:/app
    command: python api_server_microservice.py

  # Spam Detection service
  spam_detection:
    build:
      context: ./spam_detection
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - PYTHONPATH=/app
      - HOST=0.0.0.0
      - PORT=8080
      - API_KEY=development-spam-api-key
      - DATA_DIR=/app/data
      - MODELS_DIR=/app/models
      - CONFIG_DIR=/app/config
    volumes:
      - ./spam_detection:/app
    command: ./start.sh

volumes:
  postgres_data:
  redis_data:
  scylla_data:
